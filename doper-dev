#!/bin/bash

export NAME=login
PORTS=("test:303" "d2d4:304" "ndoroshenko:305")
SRVS=("api" "lk" "edu")
MAIL="email2tg-test@misis.ru"
CMDS="(build|up|down|ps|images|logs|restart|stop|start)"
CMDS2="(staging|prod)"
CMDS3="(pull|up|down|ps|images|logs|restart|stop|start)"
DNAMES="dev|test"
DNAMES2="push"
DNAMES3="staging|prod"
ACTNS="(up|down|restart|stop|start|pull)"
BASE="/opt/docker"
REGISTRY="docker.misis.ru:4443"

###############################################################################
usage() {
  bin=$(basename "$0")
  echo "Usage:"
  echo "  $bin ($DNAMES) $CMDS [OPTS]"
  echo "  $bin ($DNAMES2) $CMDS2"
  echo "  $bin ($DNAMES3) $CMDS3"
  echo
  echo "Examples:"
  echo "  $bin dev build"
  echo "  $bin dev up -d"
  echo "  $bin test restart edu"
  echo "  $bin push staging"
  echo "  $bin staging up"
  echo "  $bin prod images"
  exit "$1"
}

send() {
  echo -e "$2" | mail -s "docker $NAME: $1 by $USER" "$MAIL"
}

[ "$1" = 'help' -o "$1" = 'usage' ] && usage 0

dname="$1"
echo "$dname"|grep -Eq "^($DNAMES|$DNAMES2|$DNAMES3)$" || usage 1
shift

case "$dname" in

  test|dev)

    cmd="$1"
    echo "$cmd"|grep -Eq "^$CMDS$" || usage 1
    shift

    echo "$@"|grep -Eq "build" && usage 2

    [ "$dname" = 'test' ] && pname='test' || pname="$USER"

    if [ "$cmd" = 'build' ]; then
      for a in "${SRVS[@]}"; do
        cd "$HOME/$a" || usage 1

        if [ "$dname" != 'dev' ] && output=$(git status --porcelain) && [ -n "$output" ]; then
          echo "$a: commit your changes first"
        else
          img="$NAME/$a-$pname"
          rev=$(git rev-parse --short HEAD)
          tag=$(git describe --tags 2>/dev/null)
          [ "$dname" = 'dev' ] && args="--build-arg UID=$UID"
          printf -v line '%-20s %-10s %-10s\n' "$img" "$rev" "$tag"
          out+=$line

          printf '%-20s %-10s %-10s\n' "$img" "$rev" "$tag" "$args"
          if docker build . -t "$img:$rev" $args; then
            [ -n "$tag" ] && docker tag "$img:$rev" "$img:$tag"
            docker tag "$img:$rev" "$img:latest"
            if [ "$dname" = 'test' ]; then
              docker tag "$img:$rev" "$REGISTRY/$NAME/$a:$rev"
              docker push "$REGISTRY/$NAME/$a:$rev"
              out+="push $REGISTRY/$NAME/$a:$rev\n"
            fi
          fi
        fi
      done
      send "$dname $cmd $@" "$out"
    else
      for p in "${PORTS[@]}"; do [ "${p%%:*}" = "$pname" ] && export PORT="${p##*:}"; done
      if [ -z "$PORT" ]; then
        echo "User not found"
        exit 1
      fi
      COMPOSE_PROJECT_NAME="$pname" docker-compose -f "$BASE/$NAME/docker-compose.yml" -f "$BASE/$NAME/docker-compose.$dname.yml" "$cmd" $@
      echo "$cmd"|grep -Eq "^$ACTNS$" && send "$dname $cmd $@"
    fi

  ;;
  push)

    cmd="$1"
    echo "$cmd"|grep -Eq "^$CMDS2$" || usage 1
    shift

    for a in "${SRVS[@]}"; do
      img="$NAME/$a"
      docker tag "$img-test" "$REGISTRY/$img:$cmd"
      docker push "$REGISTRY/$img:$cmd"
      out+="$(docker images "$REGISTRY/$img")\n"
      out+="push $REGISTRY/$img:$cmd\n"
    done
    send "$dname $cmd $@" "$out"

  ;;
  staging|prod)

    cmd="$1"
    echo "$cmd"|grep -Eq "^$CMDS3$" || usage 1
    shift

    sudo -u servcraft ssh rendr "sudo docker-login $dname $cmd"
    echo "$cmd"|grep -Eq "^$ACTNS$" && send "$dname $cmd $@"

  ;;
esac
